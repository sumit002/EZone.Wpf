1. added New columns to tblSalePerson
`CreatedDate`	DATETIME DEFAULT CURRENT_DATE,
`ModifiedDate`	DATETIME,
2. added New columns to tblSaleMaster
`IsActive` BOOL DEFAULT 1
3.New Columns added tblSalePerson 
CreatedDate
ModifiedDate

CREATE VIEW "vw_BrandMaster" AS SELECT bm.Id, bm.Name, bm.Description,(CASE WHEN(SELECT COUNT(sm.Id) from tblStockMaster sm Where sm.BrandId = bm.Id)> 0 THEN 1 ELSE 0 END) AS IsUsed, bm.IsActive, bm.CreatedDate, bm.ModifiedDate FROM tblBrandMaster bm ORDER BY Name
// CREATE VIEW "vw_PaymentIncome" AS SELECT spm.Id, spm.Amount AS Amount, spm.SupportDate AS TransactionDate, 'SUPPORT_PAYMENT' AS PaymentType FROM tblSupportPaymentMaster spm UNION ALL SELECT slm.Id, CASE WHEN IFNULL(pp.PendingAmount, 0) > 0 AND IsPaid=0 THEN (stm.SalePrice - stm.PurchasePrice)*slm.Quantity-pp.PendingAmount WHEN IFNULL(pp.PendingAmount, 0) > 0 AND IsPaid=1 AND IsDiscount=1 THEN (stm.SalePrice - stm.PurchasePrice)*slm.Quantity-(pp.PendingAmount-pp.PaidAmount) ELSE (stm.SalePrice - stm.PurchasePrice)*slm.Quantity END AS Amount, SaleDate AS TransactionDate, 'SALE_PAYMENT' AS PaymentType FROM tblSaleMaster slm LEFT OUTER JOIN tblStockMaster stm ON slm.stockId = stm.Id LEFT OUTER JOIN tblPendingPayment pp ON slm.Id= pp.SaleId WHERE slm.Total>0 AND slm.Quantity>0 AND IFNULL(pp.PendingAmount, 0)< (stm.SalePrice - stm.PurchasePrice) ORDER BY AMOUNT DESC
CREATE VIEW "vw_PaymentIncome" AS SELECT spm.Id, spm.Amount AS Amount, spm.SupportDate AS TransactionDate, 'SUPPORT_PAYMENT' AS PaymentType FROM tblSupportPaymentMaster spm UNION ALL SELECT slm.Id, CASE WHEN IFNULL(pp.PendingAmount, 0) > 0 AND IsPaid=0 THEN (stm.SalePrice - stm.PurchasePrice)*slm.Quantity-pp.PendingAmount WHEN IFNULL(pp.PendingAmount, 0) > 0 AND IsPaid=1 AND IsDiscount=1 THEN (stm.SalePrice - stm.PurchasePrice)*slm.Quantity-(pp.PendingAmount-pp.PaidAmount) ELSE (stm.SalePrice - stm.PurchasePrice)*slm.Quantity END AS Amount, SaleDate AS TransactionDate, 'SALE_PAYMENT' AS PaymentType FROM tblSaleMaster slm LEFT OUTER JOIN tblStockMaster stm ON slm.stockId = stm.Id LEFT OUTER JOIN tblPendingPayment pp ON slm.Id= pp.SaleId WHERE slm.Total>0 AND slm.Quantity>0 AND Amount>0 ORDER BY AMOUNT DESC
CREATE VIEW "vw_PaymentInvest" AS SELECT Id , PurchasePrice*Quantity AS Amount, PurchaseDate AS TransactionDate, 'PURCHASE_PAYMENT' AS PaymentType FROM tblStockMaster
CREATE VIEW "vw_PendingPaymentMaster" AS SELECT pp.Id AS PendingPaymentId, pp.SaleId, sp.Id AS SalesPersonId, sp.Title, sp.Name, sp.Contact, sp.Email, sp.Address, sm.Total, sm.AmountPaid, pp.PendingAmount, sm.SaleDate, pp.IsPaid, CASE pp.IsPaid WHEN 1 THEN 'YES' ELSE 'NO' END AS Paid, pp.PaidDate , vsm.Product, vsm.Brand, vsm.ProductCode, vsm.StockCode, vsm.Quantity, vsm.PurchasePrice, vsm.SalePrice, (vsm.Quantity*vsm.PurchasePrice) AS TotalPurchasePrice, CASE WHEN sm.AmountPaid >(vsm.Quantity*vsm.PurchasePrice) THEN 0 WHEN sm.AmountPaid <= (vsm.Quantity*vsm.PurchasePrice) THEN (vsm.Quantity*vsm.PurchasePrice)-sm.AmountPaid END AS MinAmtToAvailDiscount FROM tblPendingPayment pp INNER JOIN tblSalePerson sp ON pp.SalePersonId = sp.Id INNER JOIN tblSaleMaster sm ON sm.Id = pp.SaleId LEFT OUTER JOIN vw_SaleMaster vsm ON pp.SaleId = vsm.SalesId
CREATE VIEW "vw_ProductMaster" AS SELECT pm.Id, pm.Name, pm.Description,(CASE WHEN(SELECT COUNT(sm.Id) from tblStockMaster sm Where sm.ProductId = pm.Id)> 0 THEN 1 ELSE 0 END) AS IsUsed, pm.IsActive, pm.CreatedDate, pm.ModifiedDate FROM tblProductMaster pm ORDER BY Name
CREATE VIEW "vw_SaleMaster" AS SELECT slm.Id AS SalesId, stm.Id AS StockId,pm.Id AS ProductId, pm.Name Product,bm.Id AS BrandId, bm.Name Brand, stm.ProductCode, stm.StockCode,sp.Id AS SalesPersonId, sp.Name SaleTo, sp.Contact AS SaleContact, sp.Address AS SaleAddress, stm.PurchasePrice, stm.SalePrice, slm.Quantity, slm.Total, slm.AmountPaid,pp.Id AS PendingPaymentId, (CASE WHEN pp.IsDiscount = 1 THEN 0 ELSE (slm.Total - slm.AmountPaid) END) AS Pending, pp.IsDiscount, slm.SaleDate, im.Id AS InvoiceId, im.InvoiceNumber, slm.IsActive, CASE WHEN Cast((JulianDay('now') - JulianDay(slm.CreatedDate)) As Integer) > 60 THEN 0 ELSE 1 END AS CanDelete, slm.CreatedDate, slm.ModifiedDate FROM tblSaleMaster slm INNER JOIN tblStockMaster stm ON stm.Id=slm.StockId INNER JOIN tblProductMaster pm ON pm.Id = stm.ProductId INNER JOIN tblBrandMaster bm ON bm.Id = stm.BrandId INNER JOIN tblSalePerson sp ON sp.Id=slm.salePersonId LEFT JOIN tblInvoiceMaster im ON im.SalesId = slm.Id LEFT JOIN tblPendingPayment pp ON pp.SaleId = slm.Id
CREATE VIEW "vw_SalePerson" AS SELECT sp.Id AS Id, sp.Title, sp.Name, sp.Contact, sp.AlternateContact, sp.Email, sp.Address, sp.IsActive , (SELECT COUNT(sm.Id) from tblSaleMaster sm Where sm.SalePersonId = sp.id) AS UsedCount, (CASE WHEN(SELECT COUNT(sm.Id) from tblSaleMaster sm Where sm.SalePersonId = sp.id)> 0 THEN 1 ELSE 0 END) AS IsUsed FROM tblSalePerson sp WHERE sp.IsActive = 1 Order by sp.Name
CREATE VIEW "vw_StockMaster" AS SELECT sm.Id StockId, pm.Id ProductId,pm.Name Product, bm.Id BrandId, bm.Name Brand, sm.ProductCode, sm.StockCode, sm.ItemDesc, sm.Quantity, sm.AvlQuantity, sm.PurchasePrice, sm.SalePrice,(sm.SalePrice-sm.PurchasePrice) AS ProfitPrice, sm.Quantity*sm.PurchasePrice AS Total, sm.ProductImage AS Image, sm.PurchaseDate, sm.CreatedDate FROM tblStockMaster sm INNER JOIN tblProductMaster pm ON pm.Id = sm.ProductId INNER JOIN tblBrandMaster bm ON bm.Id = sm.BrandId WHERE sm.IsActive = 1
CREATE VIEW "vw_StockMaster_New" AS SELECT sm.Id StockId, pm.Id ProductId,pm.Name Product, bm.Id BrandId, bm.Name Brand, sm.ProductCode, sm.StockCode, sm.ItemDesc, sm.Quantity, sm.AvlQuantity, sm.PurchasePrice, sm.SalePrice,(sm.SalePrice-sm.PurchasePrice) AS ProfitPrice, sm.Quantity*sm.PurchasePrice AS Total, sm.PurchaseDate, sm.IsActive, sm.CreatedDate, sm.ModifiedDate FROM tblStockMaster sm INNER JOIN tblProductMaster pm ON pm.Id = sm.ProductId INNER JOIN tblBrandMaster bm ON bm.Id = sm.BrandId WHERE sm.IsActive = 1

CREATE TABLE "tblBrandMaster" ("Id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL , "Name" VARCHAR NOT NULL , "Description" TEXT check(typeof("Description") = 'text') , "IsActive" BOOL DEFAULT 1, "CreatedDate" DATETIME DEFAULT CURRENT_TIMESTAMP, "ModifiedDate" DATETIME)
CREATE TABLE "tblInvoiceMaster" ( `Id` INTEGER PRIMARY KEY AUTOINCREMENT, `SalesId` INTEGER, `StockId` INTEGER, `InvoiceNumber` TEXT NOT NULL UNIQUE, `IsActive` BOOLEAN DEFAULT 1 )
CREATE TABLE "tblPaymentMaster" ("Id" INTEGER PRIMARY KEY NOT NULL UNIQUE , "UserId" INTEGER NOT NULL , "Cr" DOUBLE NOT NULL DEFAULT 0, "Dr" DOUBLE NOT NULL DEFAULT 0, "Status" VARCHAR, "Description" VARCHAR, "Remarks" TEXT check(typeof("Remarks") = 'text') , "CreatedDate" DATETIME DEFAULT CURRENT_DATE)
CREATE TABLE "tblPendingPayment" ( `Id` INTEGER NOT NULL, `SaleId` INTEGER, `SalePersonId` INTEGER, `PendingAmount` DOUBLE NOT NULL, `IsPaid` BOOL NOT NULL DEFAULT (0), `PaidDate` DATETIME, `IsDiscount` BOOL DEFAULT (NULL), `PaidAmount` DOUBLE DEFAULT (NULL), PRIMARY KEY(`Id`) )
CREATE TABLE "tblProductMaster" ("Id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL , "Name" VARCHAR NOT NULL , "Description" TEXT check(typeof("Description") = 'text') , "IsActive" BOOL DEFAULT 1, "CreatedDate" DATETIME, "ModifiedDate" DATETIME)
CREATE TABLE "tblSaleMaster" ( `Id` INTEGER NOT NULL UNIQUE, `StockId` INTEGER NOT NULL, `SalePersonId` INTEGER NOT NULL, `Quantity` INTEGER NOT NULL, `Price` DOUBLE, `Total` DOUBLE NOT NULL, `AmountPaid` DOUBLE NOT NULL, `SaleDate` DATETIME, `IsActive` BOOL DEFAULT 1, `CreatedDate` DATETIME DEFAULT CURRENT_DATE, `ModifiedDate` DATETIME, PRIMARY KEY(`Id`) )
CREATE TABLE "tblSalePerson" ( `Id` INTEGER NOT NULL UNIQUE, `Title` VARCHAR, `Name` VARCHAR NOT NULL, `Contact` TEXT, `AlternateContact` TEXT, `Email` VARCHAR, `Address` VARCHAR, `IsActive` BOOL DEFAULT 1, `CreatedDate` DATETIME DEFAULT (CURRENT_DATE), `ModifiedDate` DATETIME, PRIMARY KEY(`Id`) )
CREATE TABLE "tblStockMaster" ( `Id` INTEGER NOT NULL, `ProductId` INTEGER NOT NULL, `BrandId` INTEGER NOT NULL, `ProductCode` VARCHAR, `StockCode` VARCHAR, `ItemDesc` VARCHAR, `Quantity` INTEGER, `AvlQuantity` INTEGER NOT NULL DEFAULT (0), `PurchasePrice` DOUBLE NOT NULL, `SalePrice` DOUBLE NOT NULL, `ProductImage` BLOB, `IsActive` BOOL DEFAULT (1), `PurchaseDate` DATETIME, `CreatedDate` DATETIME DEFAULT (CURRENT_DATE), `ModifiedDate` DATETIME, PRIMARY KEY(`Id`) )
CREATE TABLE "tblSupportPaymentMaster" ("Id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE , "Description" VARCHAR, "Amount" DOUBLE NOT NULL , "SupportDate" DATETIME DEFAULT CURRENT_DATE, "Remarks" VARCHAR, "IsActive" BOOL DEFAULT 1)
CREATE TABLE "tblUser" ( `Id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE, `Name` VARCHAR NOT NULL, `Surname` VARCHAR, `DOB` DATETIME, `Username` VARCHAR NOT NULL, `Password` VARCHAR NOT NULL, `IsAdmin` BOOL DEFAULT 0, `IsActive` BOOL DEFAULT 1 )


// Clear DB Schema

DELETE from tblBrandMaster;
DELETE from tblInvoiceMaster;
DELETE from tblPaymentMaster;
DELETE from tblPendingPayment;
DELETE from tblProductMaster;
DELETE from tblSaleMaster;
DELETE from tblSalePerson;
DELETE from tblStockMaster;
DELETE from tblSupportPaymentMaster;


DELETE FROM sqlite_sequence WHERE name = 'tblBrandMaster';
DELETE FROM sqlite_sequence WHERE name = 'tblInvoiceMaster';
DELETE FROM sqlite_sequence WHERE name = 'tblPaymentMaster';
DELETE FROM sqlite_sequence WHERE name = 'tblPendingPayment';
DELETE FROM sqlite_sequence WHERE name = 'tblProductMaster';
DELETE FROM sqlite_sequence WHERE name = 'tblSaleMaster';
DELETE FROM sqlite_sequence WHERE name = 'tblSalePerson';
DELETE FROM sqlite_sequence WHERE name = 'tblStockMaster';
DELETE FROM sqlite_sequence WHERE name = 'tblSupportPaymentMaster';

